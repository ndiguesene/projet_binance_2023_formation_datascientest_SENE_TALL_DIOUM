version: "3.9"
services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.3.3
    container_name: elasticsearch
    networks:
      - es_network
    volumes:
      - ./config/elasticsearch/elasticsearch.yml:/usr/share/elasticsearch/elasticsearch.yml
      - esdata:/usr/share/elasticsearch/data
    healthcheck:
      start_period: 10s
      interval: 10s
      retries: 20
      test: curl --user "elastic:elastic" -s http://localhost:9200/_cluster/health | grep -vq '"status":"red"'
    ports:
      - 9200:9200
    environment:
      ES_JAVA_OPTS: "-Xms1g -Xmx1g"
      bootstrap.memory_lock: 'true'
      discovery.type: single-node
      ELASTIC_PASSWORD: es_pass
      xpack.security.enabled: 'false'

  kibana:
    image: docker.elastic.co/kibana/kibana:8.3.3
    container_name: kibana
    restart: always
    healthcheck:
      interval: 10s
      retries: 20
      test: curl --write-out 'HTTP %{http_code}' --fail --silent --output /dev/null http://kibana:5601/api/status || exit 1
    depends_on:
      - elasticsearch
    ports:
      - 5601:5601
    environment:
      NEWSFEED_ENABLED: 'false'
      TELEMETRY_OPTIN: 'false'
      TELEMETRY_ENABLED: 'false'
      SERVER_MAXPAYLOADBYTES: 4194304
      KIBANA_AUTOCOMPLETETIMEOUT: 3000
      KIBANA_AUTOCOMPLETETERMINATEAFTER: 2500000
  db:
    image: mysql:8.0
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: 'root'
      MYSQL_DATABASE: 'cryptobot'
      MYSQL_PASSWORD: 'root'
      MYSQL_ALLOW_EMPTY_PASSWORD: 'true'
    ports:
      - "3306:3306"
    volumes:
      - db-data:/data/db
    networks:
      - db_network
  populate_into_elastic:
    image: projet_final/populate_into_elasticsearch:0.0.1
    container_name: populate_into_elasticsearch
    depends_on:
      - elasticsearch
    environment:
      api_key: '7FipgVGJTbxWEyeyI5wNRyKuQwXXJcRIJBZvvQAxRY1aScVExHzdyQFMh3bLLPT5'
      api_secret: 'tnlNDg4WOt0xungysd7fAZAVKyBqqOzcgQW8MYebVo1piJzfeUC1mYkcDgJSm4T1'
      URL_ELASTIC: 'http://localhost:9200'
    networks:
      - es_network
  populate_into_mysql:
    image: projet_final/populate_into_mysql:0.0.1
    container_name: populate_into_mysql
    depends_on:
      - db
    environment:
      MYSQL_HOST: 'db'
      MYSQL_DATABASE: 'cryptobot'
      MYSQL_USER: 'root'
      MYSQL_PASSWORD: 'root'
      MYSQL_PORT: "3306"
      MYSQL_ROOT_PASSWORD: 'root'
      MYSQL_TABLENAME: "botmarche"
      api_key: '7FipgVGJTbxWEyeyI5wNRyKuQwXXJcRIJBZvvQAxRY1aScVExHzdyQFMh3bLLPT5'
      api_secret: 'tnlNDg4WOt0xungysd7fAZAVKyBqqOzcgQW8MYebVo1piJzfeUC1mYkcDgJSm4T1'
    networks:
      - db_network
  api:
    image: projet_final/api:0.0.1
    container_name: api
    depends_on:
      - populate_into_mysql
    ports:
      - "8000:8000"
    networks:
      - db_network
  model:
    image: projet_final/model:0.0.1
    container_name: model
    depends_on:
      - db
    ports:
      - "9000:9000"
    networks:
      - db_network
networks:
  db_network:
    name: mysql_net
  es_network:
    name: elastic_net
volumes:
  db-data:
    name: mysql-data
  esdata:
    driver: local