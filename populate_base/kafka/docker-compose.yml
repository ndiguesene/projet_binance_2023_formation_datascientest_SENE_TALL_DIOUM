version: '3.9'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - "2181:2181"
  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  init-kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - kafka
    #kafka-topics --bootstrap-server kafka:9092 --list
    command: "kafka-topics --bootstrap-server kafka:9092 --create --if-not-exists --topic cryptobot --replication-factor 1 --partitions 1"
  app:
    image: send_data_into_kafka
    container_name: send_data_into_kafka
    #command: bash -c "sleep 25"
    #restart: unless-stopped
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      - init-kafka
    environment:
      api_key: '7FipgVGJTbxWEyeyI5wNRyKuQwXXJcRIJBZvvQAxRY1aScVExHzdyQFMh3bLLPT5'
      api_secret: 'tnlNDg4WOt0xungysd7fAZAVKyBqqOzcgQW8MYebVo1piJzfeUC1mYkcDgJSm4T1'
      SERVERS: 'kafka:9092'
      topic_name: 'topic'
